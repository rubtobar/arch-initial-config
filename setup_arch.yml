---
- name: Configurar Arch Linux recién instalado
  hosts: localhost
  connection: local
  become: true

  vars_prompt:
    - name: new_username
      prompt: "Introduce el nombre del nuevo usuario"
      private: no

  tasks:
    - name: Instalar paquetes adicionales
      pacman:
        name:
          - base-devel
          - neovim
          - htop
          - tree
          - wget
        state: present
        update_cache: yes


    - name: Asegurar que el grupo wheel existe
      group:
        name: wheel
        state: present

    - name: Crear el usuario con grupo wheel
      user:
        name: "{{ new_username }}"
        groups: wheel
        append: yes
        shell: /bin/bash
        create_home: yes

    - name: Permitir sudo sin contraseña para grupo wheel
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^# %wheel ALL=\(ALL:ALL\) NOPASSWD: ALL'
        line: '%wheel ALL=(ALL:ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Ensure Podman is installed
      pacman:
        name: podman
        state: present


    - name: Ensure support for rootless Podman
      become: false
      blockinfile:
        path: "/home/{{ new_username }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR PODMAN"
        block: |
          if [[ -z "$XDG_RUNTIME_DIR" ]]; then
            export XDG_RUNTIME_DIR=/run/user/$UID
            if [[ ! -d "$XDG_RUNTIME_DIR" ]]; then
              export XDG_RUNTIME_DIR=/tmp/$USER-runtime
              if [[ ! -d "$XDG_RUNTIME_DIR" ]]; then
                mkdir -m 0700 "$XDG_RUNTIME_DIR"
              fi
            fi
          fi

    - name: Verificar si containers.conf ya existe
      stat:
        path: /etc/containers/containers.conf
      register: containers_conf_stat

    - name: Copiar containers.conf solo si no existe
      copy:
        src: /usr/share/containers/containers.conf
        dest: /etc/containers/containers.conf
        remote_src: true
        owner: root
        group: root
        mode: '0644'
      when: not containers_conf_stat.stat.exists


    - name: Configure cgroup_manager, events_logger and log_driver
      lineinfile:
        path: /etc/containers/containers.conf
        regexp: '{{ item.regexp }}'
        line: '{{ item.line }}'
      loop:
        - { regexp: '^cgroup_manager\s*=.*$', line: 'cgroup_manager = "cgroupfs"' }
        - { regexp: '^events_logger\s*=.*$', line: 'events_logger = "file"' }
        - { regexp: '^log_driver\s*=.*$', line: 'log_driver = "k8s-file"' }

    - name: Establecer usuario predeterminado en WSL
      copy:
        dest: /etc/wsl.conf
        content: |
          [user]
          default={{ new_username }}
        owner: root
        group: root
        mode: '0644'



